<Activity mc:Ignorable="sap sap2010" x:Class="PopUp_Handler" this:PopUp_Handler.IN_dictPopupConfig="[new dictionary(of string, string)from{{&quot;Address Lookup&quot;, &quot;OK&quot;}}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="IN_dictPopupConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="IN_dictEmailData" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="IN_dictConfig" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="IN_dateStartTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="OUT_booAddressError" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1555,3259</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PopUp_Handler_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="PopUp_Handler" sap:VirtualizedContainerService.HintSize="1565,3194" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="booPopUpExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Set Address Error" sap:VirtualizedContainerService.HintSize="1523,60" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[OUT_booAddressError]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim x As New Process&#xA;Dim t As New Date&#xA;t = Now&#xA;For Each x In process.GetProcesses&#xA;&#x9;If x.ProcessName = &quot;IRS&quot;&#xA;&#x9;&#x9;Do&#xA;&#x9;&#x9;&#x9;If x.Responding&#xA;&#x9;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;&#x9;t = Now&#xA;&#x9;&#x9;&#x9;End If&#xA;&#x9;&#x9;Loop Until (now - t).TotalMilliseconds &gt;= intTimeout&#xA;&#x9;End If&#xA;Next" DisplayName="Invoke code - Wait for Page Change" sap:VirtualizedContainerService.HintSize="1523,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="intTimeout">1000</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:UiElementExists DisplayName="Element Exists 'IRS.exe popup'" Exists="[booPopUpExists]" sap:VirtualizedContainerService.HintSize="1523,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f0a4e12-c4e8-4562-a438-77a0476081dd" InformativeScreenshot="c31a52acf497b9263a57e9d3ffa4f8c5" Selector="&lt;wnd app='irs.exe' cls='#32770' title='*' /&gt;" TimeoutMS="2000" WaitForReady="COMPLETE" />
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[booPopUpExists]" DisplayName="If popup exists" sap:VirtualizedContainerService.HintSize="1523,2448" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:RetryScope DisplayName="Resolve up to 8 popups" sap:VirtualizedContainerService.HintSize="915,2298" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="8" RetryInterval="00:00:01">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="Resolve popup and check again" sap:VirtualizedContainerService.HintSize="873,2116" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Get text and take action" sap:VirtualizedContainerService.HintSize="831,1674" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strPopUpText" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="title" DisplayName="Get Attribute 'Window Title'" sap:VirtualizedContainerService.HintSize="789,96" sap2010:WorkflowViewState.IdRef="GetAttribute_3">
                    <ui:GetAttribute.Result>
                      <OutArgument x:TypeArguments="x:String">[strPopUpText]</OutArgument>
                    </ui:GetAttribute.Result>
                    <ui:GetAttribute.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ba5d6750-8ddd-48c0-a0f2-46778a3ef6ce" Selector="&lt;wnd app='irs.exe' cls='#32770' /&gt;&lt;wnd ctrlid='65535' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:GetAttribute.Target>
                  </ui:GetAttribute>
                  <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each PopUp Specified in Config" sap:VirtualizedContainerService.HintSize="789,1446" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[IN_dictPopupConfig]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="popup" />
                        </ActivityAction.Argument>
                        <If Condition="[strPopUpText.Trim.ToLower.Contains(popup.Key.Trim.ToLower)]" DisplayName="If title matches" sap:VirtualizedContainerService.HintSize="753,1312" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <Sequence DisplayName="Take action and pass out popup text" sap:VirtualizedContainerService.HintSize="608,1163" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[popup.Value]" sap:VirtualizedContainerService.HintSize="566,1071" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                <Switch.Default>
                                  <ui:BlockUserInput TimeoutMS="{x:Null}" BlockType="All" DisplayName="Block User Input" sap:VirtualizedContainerService.HintSize="436,232" sap2010:WorkflowViewState.IdRef="BlockUserInput_2" KeyModifiers="Alt" SpecialKey="True">
                                    <ui:BlockUserInput.Body>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3efc79ab-6012-4512-b8a9-2ada7e26b7d2" InformativeScreenshot="b01cb5f9535a12ab0073fad5f632a7db" Selector="[&quot;&lt;wnd app='irs.exe' cls='#32770' /&gt;&lt;wnd title='*&quot; &amp; popup.Value.Trim &amp; &quot;' /&gt;&quot;]" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                    </ui:BlockUserInput.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:BlockUserInput>
                                </Switch.Default>
                                <Sequence x:Key="Data" DisplayName="Create exception with data" sap:VirtualizedContainerService.HintSize="526,862" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictPopUpData" />
                                    <Variable x:TypeArguments="x:String" Name="strExceptionMessage" />
                                    <Variable x:TypeArguments="x:String" Name="strFormTitle" />
                                    <Variable x:TypeArguments="x:String" Name="strFormBody" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Store PopUp Data" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Init" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictPopupData]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of string, string)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Address" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[dictPopupData("Address")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your home address ?")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Postcode" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[dictPopupData("Postcode")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your home postcode ?")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[dictPopupData("Name")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your name ?")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Email" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[dictPopupData("Email")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your email address ?")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Phone" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[dictPopupData("Phone")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your phone number ?")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Assign DisplayName="Set exception message" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strPopUpText &amp; " error."]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Set form title" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFormTitle]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Address Not Recognised</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Set form body" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFormBody]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">&lt;b&gt;Address Not Recognised&lt;/b&gt;&lt;br&gt;&lt;br&gt;NIRS does not recognise the postcode and house number provided. &lt;br&gt;&lt;br&gt;Use the information below to try and manually find the address in NIRS. Press 'Continue' once resolved, or press 'Stop' to end the process and record this issue as an exception that needs further action. &lt;br&gt;&lt;br&gt;Note: If there are existing contacts in NIRS then select the correct one and check their details match those provided below. If the contact is not listed select 'None of the above' and click 'Continue'.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Create Data Exception" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Sub Flows\Create Data Exception.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="IN_dictConfig">
                                        <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="IN_dictConfig" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IN_strMessage">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strExceptionMessage" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IN_strFormBody">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strFormBody" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IN_strFormTitle">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strFormTitle" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:DateTime" x:Key="IN_dateStartTime">
                                        <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="IN_dateStartTime" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="IN_dictPopUpData">
                                        <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dictPopUpData" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <If Condition="[popup.Key = &quot;GAZ02 No Results matching criteria&quot;]" DisplayName="If Address Error" sap:VirtualizedContainerService.HintSize="484,209" sap2010:WorkflowViewState.IdRef="If_9">
                                    <If.Then>
                                      <Assign DisplayName="Set Address Error" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[OUT_booAddressError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                                <Throw x:Key="Application" Exception="[new exception(strPopUpText &amp; &quot; error.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                              </Switch>
                            </Sequence>
                          </If.Then>
                        </If>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim x As New Process&#xA;Dim t As New Date&#xA;t = Now&#xA;For Each x In process.GetProcesses&#xA;&#x9;If x.ProcessName = &quot;IRS&quot;&#xA;&#x9;&#x9;Do&#xA;&#x9;&#x9;&#x9;If x.Responding&#xA;&#x9;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;&#x9;t = Now&#xA;&#x9;&#x9;&#x9;End If&#xA;&#x9;&#x9;Loop Until (now - t).TotalMilliseconds &gt;= intTimeout&#xA;&#x9;End If&#xA;Next" DisplayName="Invoke code - Wait for Page Change" sap:VirtualizedContainerService.HintSize="831,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                  <ui:InvokeCode.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="intTimeout">1500</InArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:UiElementExists DisplayName="Element Exists 'IRS.exe  popup'" Exists="[booPopUpExists]" sap:VirtualizedContainerService.HintSize="831,106" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f0a4e12-c4e8-4562-a438-77a0476081dd" InformativeScreenshot="c31a52acf497b9263a57e9d3ffa4f8c5" Selector="&lt;wnd app='irs.exe' cls='#32770' title='*' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <p:IsFalse DisplayName="No Pop up" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsFalse_1" Input="[booPopUpExists]" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Multiple address match" sap:VirtualizedContainerService.HintSize="563,1101" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="booAddressPopup" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:UiElementExists DisplayName="Element Exists 'IRS.exe  Address Lookup'" Exists="[booAddressPopup]" sap:VirtualizedContainerService.HintSize="521,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f0a4e12-c4e8-4562-a438-77a0476081dd" InformativeScreenshot="ba23ecd4a903a044028687b00f14a4d9" Selector="&lt;wnd app='irs.exe' cls='ThunderRT6FormDC' title='Address Lookup' /&gt;" TimeoutMS="1500" WaitForReady="COMPLETE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[booAddressPopup]" DisplayName="If popup exists" sap:VirtualizedContainerService.HintSize="521,863" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Sequence DisplayName="Create exception with data" sap:VirtualizedContainerService.HintSize="376,713" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictPopUpData" />
                  <Variable x:TypeArguments="x:String" Name="strExceptionMessage" />
                  <Variable x:TypeArguments="x:String" Name="strFormTitle" />
                  <Variable x:TypeArguments="x:String" Name="strFormBody" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Store PopUp Data" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Init" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictPopupData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of string, string)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Address" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictPopupData("Address")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your home address ?")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Postcode" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictPopupData("Postcode")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your home postcode ?")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictPopupData("Name")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your name ?")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Email" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictPopupData("Email")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your email address ?")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Phone" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictPopupData("Phone")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[IN_dictEmailData("What is your phone number ?")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Assign DisplayName="Set exception message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Multiple address matches.</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Set form title" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFormTitle]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Multiple address matches.</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Set form body" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFormBody]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">&lt;b&gt;Multiple Addresses returned&lt;/b&gt;&lt;br&gt;&lt;br&gt;NIRS has returned multiple addresses for the postcode and house number provided. &lt;br&gt;&lt;br&gt;Use the information below to try and manually select the correct address in NIRS. Press 'Continue' once resolved, or press 'Stop' to end the process and record this issue as an exception that needs further action. &lt;br&gt;&lt;br&gt;Note: If there are existing contacts in NIRS then select the correct one and check their details match those provided below. If the contact is not listed select 'None of the above' and click 'Continue'.</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Create Data Exception" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Sub Flows\Create Data Exception.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="IN_dictConfig">[IN_dictConfig]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="IN_strMessage">[strExceptionMessage]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="IN_strFormBody">[strFormBody]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="IN_strFormTitle">[strFormTitle]</InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="IN_dateStartTime">[IN_dateStartTime]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="IN_dictPopUpData">[dictPopUpData]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Assign DisplayName="Set Address Error" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[OUT_booAddressError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim x As New Process&#xA;Dim t As New Date&#xA;t = Now&#xA;For Each x In process.GetProcesses&#xA;&#x9;If x.ProcessName = &quot;IRS&quot;&#xA;&#x9;&#x9;Do&#xA;&#x9;&#x9;&#x9;If x.Responding&#xA;&#x9;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;&#x9;t = Now&#xA;&#x9;&#x9;&#x9;End If&#xA;&#x9;&#x9;Loop Until (now - t).TotalMilliseconds &gt;= intTimeout&#xA;&#x9;End If&#xA;Next" DisplayName="Invoke code - Wait for Page Change" sap:VirtualizedContainerService.HintSize="1523,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="intTimeout">2000</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>